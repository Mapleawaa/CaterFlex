version: '3.8'

services:
  # 微信小程序预览服务
  miniprogram-preview:
    image: node:18-alpine
    container_name: miniprogram-preview
    working_dir: /app
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "3000:3000"
      - "9090:9090"  # 微信开发者工具端口
    environment:
      - NODE_ENV=development
      - PREVIEW_MODE=true
    command: >
      sh -c "
        npm install &&
        npm run dev:preview
      "
    networks:
      - miniprogram-network

  # 模拟后端API服务
  mock-api:
    image: node:18-alpine
    container_name: mock-api-server
    working_dir: /app/mock
    volumes:
      - ./mock:/app/mock
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - API_PORT=8080
    command: >
      sh -c "
        npm install -g json-server &&
        json-server --watch db.json --port 8080 --host 0.0.0.0
      "
    networks:
      - miniprogram-network

  # 数据库服务（开发环境）
  database:
    image: mysql:8.0
    container_name: miniprogram-db
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: miniprogram_dev
      MYSQL_USER: dev_user
      MYSQL_PASSWORD: dev_pass
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - miniprogram-network

  # Redis缓存服务
  redis:
    image: redis:7-alpine
    container_name: miniprogram-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - miniprogram-network

  # 文件存储服务
  minio:
    image: minio/minio:latest
    container_name: miniprogram-storage
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - miniprogram-network

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local

networks:
  miniprogram-network:
    driver: bridge